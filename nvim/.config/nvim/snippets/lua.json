{"defer":{"prefix":"defer","body":["vim.defer_fn(function()","  ${1:-- content}","end, ${2:100})"]},"whichkey":{"prefix":"whichkey","body":["local wk = require('which-key')","wk.add({","  {","    mode = { '${1:mode}' },","    { '${2:lhs}', '${3:rhs}', desc = '${4:desc}', icon = '${5:icon}' },","  },","})"]},"schedule_wrap":{"prefix":"schedule_wrap","body":["vim.schedule_wrap(function()","  ${1:-- code}","end)"]},"dnl":{"prefix":"dnl","body":"---@diagnostic disable-next-line"},"mode + lhs + rhs + opts":{"prefix":"keymap","body":"vim.keymap.set(${1:'n'}, ${2:lhs}, ${3:rhs}, { ${4:opts} })"},"callback":{"prefix":"callback","body":["callback = function()","  ${1:-- code}","end,"]},"schedule":{"prefix":"schedule","body":["vim.schedule(function()","  ${1:-- code}","end)"]},"timer":{"prefix":"timer","body":["local t_start = vim.uv.hrtime()","local t_end = vim.uv.hrtime()","print('${1:label} took: ' .. (t_end - t_start) / 1e6 .. 'ms')"]},"file exists":{"prefix":"file exists","body":"local fileExists = vim.uv.fs_stat(\"${1:filepath}\") ~= nil"},"ignore":{"prefix":"ignore","body":"-- stylua: ignore"},"notify":{"prefix":"notify","body":"vim.notify('${1:msg}', vim.log.levels.${2:ERROR})"},"wk (basic)":{"prefix":"wk (basic)","body":["{","  mode = 'n',","  { '${1:lhs}', ${2:rhs}, desc = '${3:desc}', icon = '${4:icon}' },","},"]},"autocmd (Filetype)":{"prefix":"new-autocmd","body":["vim.api.nvim_create_autocmd(\"${1:Event}\", {","\tpattern = \"${2:ft}\",","\tcallback = function()","\t\t${0:-- code}","\tend,","})"]},"plugin":{"body":["---@type LazyPluginSpec","return {","  \"$1\", -- https://github.com/${1:repository}","}"],"prefix":"plugin"}}
